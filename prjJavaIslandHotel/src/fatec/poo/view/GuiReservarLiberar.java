package fatec.poo.view;
import fatec.poo.model.Atendente;
import fatec.poo.model.Hospede;
import fatec.poo.model.Pessoa;
import fatec.poo.model.QuartoHotel;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;

//@author paula.moraes

public class GuiReservarLiberar extends javax.swing.JFrame {

    //reates new form GuiReservarLiberar

    public GuiReservarLiberar(ArrayList<Pessoa> c, ArrayList<QuartoHotel> qh) {
        initComponents();
        cadastro = c;
        quartoHotel = qh;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCPF = new javax.swing.JLabel();
        lblRegFunc = new javax.swing.JLabel();
        jLabelNoQuarto = new javax.swing.JLabel();
        lblDataEnt = new javax.swing.JLabel();
        lblDataSai = new javax.swing.JLabel();
        lblValorPagar = new javax.swing.JLabel();
        lblSituacao = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();
        btnLiberar = new javax.swing.JButton();
        btnReservar = new javax.swing.JButton();
        txtRegFuncional = new javax.swing.JTextField();
        txtCPF = new javax.swing.JTextField();
        txtNoQuarto = new javax.swing.JTextField();
        txtDataEntrada = new javax.swing.JTextField();
        txtDataSaida = new javax.swing.JTextField();
        txtValorPagar = new javax.swing.JTextField();
        txtSituacao = new javax.swing.JTextField();
        btnRegFunc = new javax.swing.JButton();
        btnCPF = new javax.swing.JButton();
        txtNomeAtendente = new javax.swing.JTextField();
        txtNomeHospede = new javax.swing.JTextField();
        btnNoQuarto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reserva/Liberação Quarto");

        lblCPF.setText("CPF Hóspede");

        lblRegFunc.setText("Reg. Funcional");

        jLabelNoQuarto.setText("No. Quarto");

        lblDataEnt.setText("Data de entrada");

        lblDataSai.setText("Data de saída");

        lblValorPagar.setText("Valor a pagar");

        lblSituacao.setText("Situação");

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnLiberar.setText("Liberar");
        btnLiberar.setEnabled(false);
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        btnReservar.setText("Reservar");
        btnReservar.setEnabled(false);
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        txtCPF.setEnabled(false);

        txtNoQuarto.setEnabled(false);

        txtDataEntrada.setEnabled(false);

        txtDataSaida.setEnabled(false);

        txtValorPagar.setEnabled(false);

        txtSituacao.setEnabled(false);

        btnRegFunc.setText("...");
        btnRegFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegFuncActionPerformed(evt);
            }
        });

        btnCPF.setText("...");
        btnCPF.setEnabled(false);
        btnCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCPFActionPerformed(evt);
            }
        });

        txtNomeAtendente.setEnabled(false);

        txtNomeHospede.setEnabled(false);

        btnNoQuarto.setText("...");
        btnNoQuarto.setEnabled(false);
        btnNoQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoQuartoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(208, 208, 208))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNoQuarto)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDataEnt)
                                    .addComponent(lblDataSai)
                                    .addComponent(lblValorPagar))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDataEntrada)
                                    .addComponent(txtDataSaida)
                                    .addComponent(txtValorPagar)
                                    .addComponent(txtNoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNoQuarto)
                            .addComponent(btnCPF)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblRegFunc)
                                .addGap(18, 18, 18)
                                .addComponent(txtRegFuncional))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCPF)
                                .addGap(25, 25, 25)
                                .addComponent(txtCPF)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNomeAtendente)
                        .addComponent(txtNomeHospede)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblSituacao)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnLiberar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegFunc)
                    .addComponent(txtRegFuncional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegFunc))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPF)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCPF)
                    .addComponent(txtNomeHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNoQuarto)
                    .addComponent(txtNoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSituacao)
                    .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNoQuarto))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataEnt)
                    .addComponent(txtDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataSai)
                    .addComponent(txtDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValorPagar)
                    .addComponent(txtValorPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(btnLiberar)
                    .addComponent(btnReservar))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnRegFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegFuncActionPerformed
        posAtendente = recuperaAtendente();
        
        if (posAtendente >= 0){
            txtNomeAtendente.setText(cadastro.get(posAtendente).getNome());
            txtRegFuncional.setEnabled(false);
            btnRegFunc.setEnabled(false);
            txtCPF.setEnabled(true);
            btnCPF.setEnabled(true);
            btnCPF.setEnabled(true);
        }else{
            txtNomeAtendente.setText("Atendente não cadastrado");
        }
    }//GEN-LAST:event_btnRegFuncActionPerformed

    private void btnCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCPFActionPerformed
        posHospede = recuperaHospede();
        
        if (posHospede >= 0){
            txtNomeHospede.setText(cadastro.get(posHospede).getNome());
            txtCPF.setEnabled(false);
            btnCPF.setEnabled(false);
            if (((Hospede)cadastro.get(posHospede)).getQuartoHotel() != null){
                txtNoQuarto.setText(String.valueOf(((Hospede)cadastro.get(posHospede)).getQuartoHotel().getNumQuarto()));
                if (((Hospede)cadastro.get(posHospede)).getQuartoHotel().situacao()){
                    txtSituacao.setText("Quarto ocupado");
                }else{
                    txtSituacao.setText("Quarto desocupado");
                }
                txtDataEntrada.setText(((Hospede)cadastro.get(posHospede)).getQuartoHotel().getDataEntrada());
                txtDataSaida.setEnabled(true);
                btnLiberar.setEnabled(true);
            }else{
                txtNoQuarto.setEnabled(true);
                btnNoQuarto.setEnabled(true);
            }
        }else{
            txtNomeHospede.setText("Hóspede não cadastrado");
        }
    }//GEN-LAST:event_btnCPFActionPerformed

    private void btnNoQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoQuartoActionPerformed
        int i;
        for (i = 0; i < quartoHotel.size(); i++){
            if (quartoHotel.get(i) instanceof QuartoHotel){
                if (quartoHotel.get(i).getNumQuarto() == Integer.parseInt(txtNoQuarto.getText())){
                    break;
                }
            }
        }
        
        if (i < quartoHotel.size()){
            if (quartoHotel.get(i).situacao()){
                    txtSituacao.setText("Quarto ocupado");
                }else{
                    txtSituacao.setText("Quarto desocupado");
                    txtDataEntrada.setEnabled(true);
                    btnReservar.setEnabled(true);
                }
        }else{
           txtSituacao.setText("Quarto não cadastrado");
        }
    }//GEN-LAST:event_btnNoQuartoActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        int i;
        for (i = 0; i < quartoHotel.size(); i++){
            if (quartoHotel.get(i) instanceof QuartoHotel){
                if (quartoHotel.get(i).getNumQuarto() == Integer.parseInt(txtNoQuarto.getText())){
                    break;
                }
            }
        }
        
        posHospede = recuperaHospede();
        posAtendente = recuperaAtendente();
                
        if (i < quartoHotel.size()){
            quartoHotel.get(i).setDataEntrada(txtDataEntrada.getText());
            quartoHotel.get(i).reservar((Hospede)cadastro.get(posHospede), (Atendente)cadastro.get(posAtendente));
        }
        
        txtRegFuncional.setText(null);
        txtNomeAtendente.setText(null);
        txtCPF.setText(null);
        txtNomeHospede.setText(null);
        txtNoQuarto.setText(null);
        txtSituacao.setText(null);
        txtDataEntrada.setText(null);
        txtDataSaida.setText(null);
        txtValorPagar.setText(null);
        
        txtNomeAtendente.setEnabled(false);
        btnCPF.setEnabled(false);
        txtNomeHospede.setEnabled(false);
        txtNoQuarto.setEnabled(false);
        btnNoQuarto.setEnabled(false);
        txtSituacao.setEnabled(false);
        txtDataEntrada.setEnabled(false);
        txtDataSaida.setEnabled(false);
        txtValorPagar.setEnabled(false);
        btnReservar.setEnabled(false);
        
        txtRegFuncional.setEnabled(true);
        txtRegFuncional.requestFocus();
        btnRegFunc.setEnabled(true);
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
        DecimalFormat df = new DecimalFormat("#,##0.00");
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Calendar data1 = Calendar.getInstance();
        Calendar data2 = Calendar.getInstance();
        int dias = 0, i;
        double tx = 0, totalDiaria = 0;
        
        try {
            data1.setTime(sdf.parse(txtDataEntrada.getText()));
            data2.setTime(sdf.parse(txtDataSaida.getText()));
        }catch (java.text.ParseException e ) { }
        
        dias = data2.get(Calendar.DAY_OF_YEAR) - data1.get(Calendar.DAY_OF_YEAR);
        

        for (i = 0; i < quartoHotel.size(); i++){
            if (quartoHotel.get(i).getNumQuarto() == Integer.parseInt(txtNoQuarto.getText())){
                posQuarto = i;
                break;
            } 
        }
        
        posHospede = recuperaHospede();
        tx = ((Hospede)cadastro.get(posHospede)).getTxDesconto() / 100;
        posAtendente = recuperaAtendente();
        
        totalDiaria = quartoHotel.get(posQuarto).liberar(dias, tx);
        txtValorPagar.setText(df.format(totalDiaria));
        
        txtRegFuncional.setText(null);
        txtNomeAtendente.setText(null);
        txtCPF.setText(null);
        txtNomeHospede.setText(null);
        txtNoQuarto.setText(null);
        txtSituacao.setText(null);
        txtDataEntrada.setText(null);
        txtDataSaida.setText(null);
        
        txtNomeAtendente.setEnabled(false);
        btnCPF.setEnabled(false);
        txtNomeHospede.setEnabled(false);
        txtNoQuarto.setEnabled(false);
        btnNoQuarto.setEnabled(false);
        txtSituacao.setEnabled(false);
        txtDataEntrada.setEnabled(false);
        txtDataSaida.setEnabled(false);
        txtValorPagar.setEnabled(false);
        btnReservar.setEnabled(false);
        
        txtRegFuncional.setEnabled(true);
        txtRegFuncional.requestFocus();
        btnRegFunc.setEnabled(true);
    }//GEN-LAST:event_btnLiberarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCPF;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JButton btnNoQuarto;
    private javax.swing.JButton btnRegFunc;
    private javax.swing.JButton btnReservar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabelNoQuarto;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblDataEnt;
    private javax.swing.JLabel lblDataSai;
    private javax.swing.JLabel lblRegFunc;
    private javax.swing.JLabel lblSituacao;
    private javax.swing.JLabel lblValorPagar;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtDataEntrada;
    private javax.swing.JTextField txtDataSaida;
    private javax.swing.JTextField txtNoQuarto;
    private javax.swing.JTextField txtNomeAtendente;
    private javax.swing.JTextField txtNomeHospede;
    private javax.swing.JTextField txtRegFuncional;
    private javax.swing.JTextField txtSituacao;
    private javax.swing.JTextField txtValorPagar;
    // End of variables declaration//GEN-END:variables

    private int recuperaAtendente(){
        int posicaoA, i;
        
        for (i = 0; i < cadastro.size(); i++){
            if (cadastro.get(i) instanceof Atendente){
                if (((Atendente)cadastro.get(i)).getRegFunc().equals(txtRegFuncional.getText())){
                    break;
                }
            }
        }
        
        if (i < cadastro.size()){
           posicaoA = i; 
        }else{
           posicaoA = -1;
        }
        
        return posicaoA;
    }
    
    private int recuperaHospede(){
        int posicaoH, i;
        
        for (i = 0; i < cadastro.size(); i++){
            if (cadastro.get(i) instanceof Hospede){
                if (((Hospede)cadastro.get(i)).getCpf().equals(txtCPF.getText())){
                    break;
                }
            }
        }
        
        if (i < cadastro.size()){
            posicaoH = i; 
        }else{
            posicaoH = -1;
        }
        
        return posicaoH;
    }
    
    
    private ArrayList<Pessoa> cadastro;
    private ArrayList<QuartoHotel> quartoHotel;
    private Pessoa p = null;
    private int posAtendente;
    private int posHospede;
    private int posQuarto;
}
